# -*- coding: utf-8 -*-
"""BigDataProjet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M_AwNovULOmDoqGavURU2-dz_IVgUqvT
"""

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("CSV_meteo.csv",delimiter = ";")
data.iloc[:,:9]

#Phase de suppression des colonnes inutile (cf note dans Trello), pas encore toute listés -> ptet encore d'autres à supprimer
#dataWithDeleted = data.drop(["Nébulosité couche nuageuse 3","Nébulosité couche nuageuse 4","Hauteur de base 3","Hauteur de base 4","Température","Variation de pression en 3 heures","Température minimale sur 12 heures","Température minimale sur 24 heures","Température maximale sur 12 heures","Température maximale sur 24 heures","Température minimale du sol sur 12 heures","Température minimale du sol sur 12 heures (en °C)","Température maximale sur 12 heures (°C)","Précipitations dans les 3 dernières heures","Précipitations dans les 6 dernières heures","Précipitations dans les 12 dernières heures","Phénomène spécial 1","Phénomène spécial 2","Phénomène spécial 3","Phénomène spécial 4","Nébulosité couche nuageuse 3","Nébulosité couche nuageuse 4","Hauteur de base 3","Hauteur de base 4"],axis = 1,inplace = True) #inplace permet de supprimé direct dans le df sans faire de copie
#dataWithDeleted = data.drop("Géopotentiel",axis = 1,inplace=True)
liste = data.columns.to_list()
liste1 = ['Précipitations dans la dernière heure','Température maximale sur 12 heures (°C)','Température minimale sur 12 heures (°C)','Phénomène spécial 1','Phénomène spécial 2','Phénomène spécial 3','Phénomène spécial 4','Précipitations dans les 12 dernières heures','Précipitations dans les 3 dernières heures','Précipitations dans les 6 dernières heures','Variation de pression en 3 heures',"Géopotentiel","Température minimale sur 12 heures",'Nébulosité couche nuageuse 3', 'Type nuage 3', 'Hauteur de base 3','Nébulosité couche nuageuse 4', 'Type nuage 4', 'Hauteur de base 4', "Température minimale sur 24 heures", "Température maximale sur 12 heures", "Température maximale sur 24 heures", "Température minimale du sol sur 12 heures", "Température minimale du sol sur 12 heures (en °C)", "Température maximale sur 12 heures (°C)"]

# Supprimer les éléments de liste1 qui ne sont pas présents dans liste
liste1 = [elem for elem in liste1 if elem in liste]
#"Géopotentiel" in liste
#all(elem in liste1 for elems in liste)
dataWithDeleted = data.drop(liste1,axis=1,inplace = True)
#print(data.columns)
data.head() #on est passé de 82 à 58 colonnes

#fill missing values
columnsWithMissings = data.columns[data.isnull().any()]
print(len(columnsWithMissings))
missing_count = data.isnull().sum()
#print("\nNombre de valeurs manquantes par colonne \n:", missing_count)
colonnes = columnsWithMissings.to_list()
mean = 0
#print(data['communes'].dtype)
colonnes
compteur = 0
for colonne in colonnes:
    if data[colonne].dtype == "float64":
        compteur += 1
        # Calculer la moyenne des valeurs non NaN dans la colonne
        mean = data[colonne][pd.notnull(data[colonne])].mean()

        # Remplacer les valeurs NaN par la moyenne calculée
        data[colonne].fillna(mean, inplace=True)
    elif data[colonne].dtype == 'object' :
      data[colonne].fillna("Inconnu",inplace=True)
      compteur +=1
print(compteur)

#df sans missing values
data.head()

